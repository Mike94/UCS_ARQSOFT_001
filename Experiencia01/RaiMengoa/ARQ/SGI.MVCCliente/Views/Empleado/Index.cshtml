@model  EmpleadoViewModel
@using SGI.MVCCliente.ViewModel
@using SGI.MVCCliente.Helpers
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.Hidden("Url_Empleado_GridPV", Url.Action("EmpleadoGridPV", "Empleado"), new { @id = "Url_EmpleadoGridPV" })
@Html.Hidden("Url_Empleado_Guardar", Url.Action("Guardar", "Empleado"), new { @id = "Url_Empleado_Guardar" })
@Html.Hidden("Url_Empleado_Add", Url.Action("Add", "Empleado"), new { @id = "Url_Empleado_Add" })
@Html.Hidden("Url_Empleado_Edit", Url.Action("Edit", "Empleado"), new { @id = "Url_Empleado_Edit" })
@Html.Hidden("Url_Empleado_InnerEdit", Url.Action("InnerEdit", "Empleado"), new { @id = "Url_Empleado_InnerEdit" })

@Html.Hidden("Url_Usuario_Guardar", Url.Action("Guardar", "Usuario"), new { @id = "Url_Usuario_Guardar" })
@Html.Hidden("Url_Usuario_Add", Url.Action("Add", "Usuario"), new { @id = "Url_Usuario_Add" })
@Html.Hidden("Url_Usuario_Edit", Url.Action("Edit", "Usuario"), new { @id = "Url_Usuario_Edit" })
@Html.Hidden("Url_Usuario_InnerEdit", Url.Action("InnerEdit", "Usuario"), new { @id = "Url_Usuario_InnerEdit" })

@using (Html.BeginForm("Index", "Empleado"))
{
    <h3 class="page-header">
        <span>Información de empleados</span>
    </h3>

    <div class="panel panel-default">
        <div class="panel-body">

            <div class="form-horizontal">
                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-4">
                        @Html.LabelFor(model => model.EntityEmpleado.Nombres)

                        @Html.TextBoxFor(model => model.EntityEmpleadoPaginacion.Nombres, new { @class = "form-control" })
                    </div>

                    <div class="col-sm-offset-0 col-sm-4">
                        @Html.LabelFor(model => model.EntityEmpleadoPaginacion.Estado)

                        <div class="inline-control">
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.EntityEmpleadoPaginacion.Estado, Constantes.Activo)
                                @Constantes.CadenaActivo
                            </label>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.EntityEmpleadoPaginacion.Estado, Constantes.Inactivo)
                                @Constantes.CadenaInactivo
                            </label>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.EntityEmpleadoPaginacion.Estado, Constantes.UnoNegativo)
                                @Constantes.CadenaTodos
                            </label>
                        </div>
                    </div>
                </div>

                @*OPCIONES*@
                <div class="form-group">
                    <div class="text-center">
                        <button id="searchButton" type="button" class="btn btn-primary">
                            <span class="glyphicon glyphicon-search"></span>&nbsp;Buscar
                        </button>
                        <button id="addButton" type="button" class="btn btn-default">
                            <span class="glyphicon glyphicon-plus"></span>&nbsp;Agregar
                        </button>
                    </div>
                </div>

            </div>
        </div>
    </div>


    <div id="EmpleadoGridPV">
        @if (Model.ListEmpleadoPaginado.Count > Constantes.Cero)
        {
            @Html.Partial(Constantes.EmpleadoGridPV)
        } 
    </div>

    <script src="~/Scripts/Views/Empleado.js"></script>
    <script src="~/Scripts/Views/Usuario.js"></script>
}